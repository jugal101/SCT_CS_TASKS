from PIL import Image
import os

def process_image(image_path: str, output_path: str, operation: str) -> None:
    """Encrypts an image by swapping or inverting pixel colors

    Args:
        image_path (str): Path to the input image.
        output_path (str): Path to save the modified image.
        operation (str): 'swap', 'invert', or 'grayscale'.

    Returns:
        None
    """
    if not os.path.exists(image_path):
        print("Error: File not found.")
        return
    
    try:
        img = Image.open(image_path)
        pixels = img.load()

        for i in range(img.width):
            for j in range(img.height):
                r, g, b = pixels[i, j]
                if operation == 'swap':
                    pixels[i, j] = (b, g, r)  # Swap color channels
                elif operation == 'invert':
                    pixels[i, j] = (255 - r, 255 - g, 255 - b) 
                elif operation == 'grayscale':
                    gray = int(0.3 * r + 0.59 * g + 0.11 * b)  
                    pixels[i, j] = (gray, gray, gray)

        img.save(output_path)
        print(f"Image processed and saved to {output_path}")
    
    except Exception as e:
        print(f"Error: {e}")

def main():
    image_path = input("Enter the image path: ").strip()
    output_path = input("Enter the output path: ").strip()
    operation = input("Enter operation (swap/invert/grayscale): ").strip().lower()

    if operation not in ['swap', 'invert', 'grayscale']:
        print("Error: Invalid operation. Choose 'swap', 'invert', or 'grayscale'.")
        return

    process_image(image_path, output_path, operation)

if __name__ == "__main__":
    main()
